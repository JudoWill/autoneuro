# AUTOGENERATED! DO NOT EDIT! File to edit: 04_field_mapping.ipynb (unless otherwise specified).

__all__ = ['FieldMapper']

# Cell

import pandas as pd

# Cell

class FieldMapper(object):

    def __init__(self, mapping_df):

        self.mapping_df = mapping_df

    @staticmethod
    def from_file(path):

        if path.endswith('csv'):
            mapping_df = pd.read_csv(path)
        elif path.endswith('tsv'):
            mapping_df = pd.read_csv(path, sep = '\t')
        elif path.endswith('xlsx'):
            mapping_df = pd.read_excel(path)
        else:
            raise ValueError(f'Could not understand {path}')

        return FieldMapper(mapping_df)

    def convert(self, data, source_column, target_column):

        assert source_column in self.mapping_df
        assert target_column in self.mapping_df

        source_fields = sorted(set(self.mapping_df[source_column].dropna()))
        target_fields = sorted(set(self.mapping_df[target_column].dropna()))

        id_df = self.mapping_df[[source_column, target_column]].dropna()
        id_dict = dict(row.values for _, row in id_df.iterrows())

        mapped_data = data[source_fields].rename(columns = id_dict)
        #print(target_fields)
        mapped_data = mapped_data.reindex(target_fields, axis=1)

        return mapped_data

